"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTree = void 0;
const child_process_1 = require("child_process");
const getTree = () => {
    const isWin = process.platform === 'win32';
    const inspectCommand = isWin ? 'wmic.exe' : 'ps';
    const inspectArgs = isWin
        ? ['PROCESS', 'GET', 'Name,ProcessId,ParentProcessId,Status']
        : ['-A', '-o', 'ppid,pid,stat,args'];
    const output = (0, child_process_1.spawnSync)(inspectCommand, inspectArgs);
    const lines = output.stdout.toString().split('\n');
    const headers = lines.shift().trim().split(/\s+/).map(normalizeHeader);
    headers.pop();
    const processes = {};
    for (const line of lines) {
        const columns = line.trim().split(/\s+/);
        const info = Object.fromEntries(headers.map((h) => [h, columns.shift()]));
        const { pid, ...proc } = info;
        proc.argv = columns;
        processes[pid] = proc;
    }
    return processes;
};
exports.getTree = getTree;
const headerMap = {
    Name: 'argv',
    ARGS: 'argv',
    ParentProcessId: 'ppid',
    ProcessId: 'pid',
    Status: 'stat',
};
const normalizeHeader = (str) => {
    return (headerMap[str] ?? str).toLowerCase();
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvcHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaURBQTBDO0FBRW5DLE1BQU0sT0FBTyxHQUFHLEdBQUcsRUFBRTtJQUMxQixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsUUFBUSxLQUFLLE9BQU8sQ0FBQztJQUMzQyxNQUFNLGNBQWMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ2pELE1BQU0sV0FBVyxHQUFHLEtBQUs7UUFDdkIsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLEtBQUssRUFBRSx1Q0FBdUMsQ0FBQztRQUM3RCxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLG9CQUFvQixDQUFDLENBQUM7SUFDdkMsTUFBTSxNQUFNLEdBQUcsSUFBQSx5QkFBUyxFQUFDLGNBQWMsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUN0RCxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNuRCxNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsS0FBSyxFQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQU14RSxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDZCxNQUFNLFNBQVMsR0FBeUIsRUFBRSxDQUFDO0lBQzNDLEtBQUssTUFBTSxJQUFJLElBQUksS0FBSyxFQUFFLENBQUM7UUFDekIsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QyxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxRSxNQUFNLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBSSxFQUFFLEdBQUcsSUFBVyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ3BCLFNBQVMsQ0FBQyxHQUFJLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDekIsQ0FBQztJQUNELE9BQU8sU0FBUyxDQUFDO0FBQ25CLENBQUMsQ0FBQztBQXhCVyxRQUFBLE9BQU8sV0F3QmxCO0FBRUYsTUFBTSxTQUFTLEdBQTJCO0lBQ3hDLElBQUksRUFBRSxNQUFNO0lBQ1osSUFBSSxFQUFFLE1BQU07SUFDWixlQUFlLEVBQUUsTUFBTTtJQUN2QixTQUFTLEVBQUUsS0FBSztJQUNoQixNQUFNLEVBQUUsTUFBTTtDQUNmLENBQUM7QUFFRixNQUFNLGVBQWUsR0FBRyxDQUFDLEdBQVcsRUFBRSxFQUFFO0lBQ3RDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDL0MsQ0FBQyxDQUFDIn0=