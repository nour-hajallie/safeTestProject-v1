import { RenderOptions } from './render';
import { Importer } from './bootstrap';
import React from 'react';
export { Override } from 'react-override';
export declare const createOverride: <T>(defaultValue: T) => import("react-override").Override<T>;
export declare function render(elementToRender?: React.ReactNode | ((app: React.ReactNode) => React.ReactNode), options?: RenderOptions): Promise<import("./render").RenderReturn>;
type BootstrapArgs = Importer & {
    element: React.ReactNode;
    render: (e: React.ReactNode) => void;
};
export declare const bootstrap: (args: BootstrapArgs) => Promise<void>;
export declare const Bootstrap: React.FunctionComponent<React.PropsWithChildren<{
    /** Note that using this in SSR mode this will cause the page to start with the loading component before the page is ready. */
    loading?: React.ReactNode;
} & Importer>>;
//# sourceMappingURL=react.d.ts.map