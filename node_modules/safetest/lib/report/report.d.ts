import React from 'react';
import { useFetching as myUseFetching, useHashState as myUseHashState } from './hooks';
import { Accordion as MyAccordion } from './accordion';
import { Chip as MyChip } from './chip';
import { Expandable as MyExpandable } from './expandable';
import { File as MyFile } from './file';
import { Label as MyLabel } from './label';
import { Radio as MyRadio } from './radio';
import { Suite as MySuite } from './suite';
import { Tabs as MyTabs } from './tabs';
import { Test as MyTest } from './test';
import { ArtifactType } from './types';
export declare const FilenameContext: React.Context<string | null>;
export declare const StateContext: React.Context<{
    viewing?: string | undefined;
    id?: string | undefined;
}>;
type Components = {
    Accordion: typeof MyAccordion;
    Chip: typeof MyChip;
    Expandable: typeof MyExpandable;
    File: typeof MyFile;
    Label: typeof MyLabel;
    Radio: typeof MyRadio;
    Suite: typeof MySuite;
    Tabs: typeof MyTabs;
    Test: typeof MyTest;
};
export declare const ComponentsContext: React.Context<Required<Props>>;
export type Props = Partial<Components> & Partial<{
    useState: typeof myUseHashState;
    useFetching: typeof myUseFetching;
    getTestUrl: (filename: string, test: string) => string | undefined;
    renderArtifact: (type: ArtifactType, artifact: string) => {
        element: React.ReactNode;
        url: string;
    } | null;
}>;
export declare const Report: React.FunctionComponent<Props>;
export {};
//# sourceMappingURL=report.d.ts.map