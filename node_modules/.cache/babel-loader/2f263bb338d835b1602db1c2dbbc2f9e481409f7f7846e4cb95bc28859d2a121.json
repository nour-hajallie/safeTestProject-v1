{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRetryAttempt = void 0;\nconst state_1 = require(\"./state\");\nconst is_in_node_1 = require(\"./is-in-node\");\nconst getRetryAttempt = () => {\n  if (is_in_node_1.isInNode) {\n    if (!state_1.state.activeTest) {\n      throw new Error('getRetryAttempt called outside of a test');\n    }\n    return state_1.state.retryMap[state_1.state.activeTest];\n  }\n  return state_1.state.browserState?.retryAttempt ?? 0;\n};\nexports.getRetryAttempt = getRetryAttempt;","map":{"version":3,"names":["state_1","require","is_in_node_1","getRetryAttempt","isInNode","state","activeTest","Error","retryMap","browserState","retryAttempt","exports"],"sources":["/Users/nour/Documents/GitHub/safeTestProject-v1/node_modules/safetest/src/get-retry-attempt.ts"],"sourcesContent":["import { state } from './state';\nimport { isInNode } from './is-in-node';\n\nexport const getRetryAttempt = () => {\n  if (isInNode) {\n    if (!state.activeTest) {\n      throw new Error('getRetryAttempt called outside of a test');\n    }\n    return state.retryMap[state.activeTest];\n  }\n  return state.browserState?.retryAttempt ?? 0;\n};\n"],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AACA,MAAAC,YAAA,GAAAD,OAAA;AAEO,MAAME,eAAe,GAAGA,CAAA,KAAK;EAClC,IAAID,YAAA,CAAAE,QAAQ,EAAE;IACZ,IAAI,CAACJ,OAAA,CAAAK,KAAK,CAACC,UAAU,EAAE;MACrB,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;;IAE7D,OAAOP,OAAA,CAAAK,KAAK,CAACG,QAAQ,CAACR,OAAA,CAAAK,KAAK,CAACC,UAAU,CAAC;;EAEzC,OAAON,OAAA,CAAAK,KAAK,CAACI,YAAY,EAAEC,YAAY,IAAI,CAAC;AAC9C,CAAC;AARYC,OAAA,CAAAR,eAAe,GAAAA,eAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}