{"ast":null,"code":"var _jsxFileName = \"/Users/nour/Documents/GitHub/safeTestProject-v1/src/index.tsx\";\nimport ReactDOM from 'react-dom';\nimport { bootstrap } from 'safetest/react';\nimport App from \"./App.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this), document.getElementById(\"app\"));\nconst container = document.getElementById(\"app\");\nconst element = /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 17\n}, this);\nconst isDev = process.env.NODE_ENV !== 'production';\nbootstrap({\n  element,\n  render: element => ReactDOM.render(element, container),\n  // If using React 18:\n  // render: (element) => ReactDOM.createRoot(container).render(element),\n\n  // Add one of the following depending on your bundler...\n\n  // Webpack:\n  webpackContext: isDev && import.meta.webpackContext('.', {\n    recursive: true,\n    regExp: /\\.safetest$/,\n    mode: 'lazy'\n  })\n\n  // Vite:\n  // importGlob: isDev && import.meta.glob('./**/*.safetest.{j,t}s{,x}'),\n\n  // Using the `npx safetest generateimportmap src/Bootstrap.tsx src > src/imports.tsx` syntax:\n  // imports, // Where imports is defined as `import imports from './imports';`\n\n  // Other:\n  // import: isDev && async (s) => import(`${s.replace(/.*src/, '.').replace(/\\.safetest$/, '')}.safetest`),\n});","map":{"version":3,"names":["ReactDOM","bootstrap","App","React","jsxDEV","_jsxDEV","render","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById","container","element","isDev","process","env","NODE_ENV","webpackContext","import","meta","recursive","regExp","mode"],"sources":["/Users/nour/Documents/GitHub/safeTestProject-v1/src/index.tsx"],"sourcesContent":[" import ReactDOM from 'react-dom';\nimport { bootstrap } from 'safetest/react';\n import App from \"./App.tsx\";\nimport React from 'react';\nReactDOM.render(\n  <App />,\n  document.getElementById(\"app\")\n);\nconst container = document.getElementById(\"app\");\nconst element = <App />;\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\nbootstrap({\n element,\n render: (element) => ReactDOM.render(element, container),\n // If using React 18:\n // render: (element) => ReactDOM.createRoot(container).render(element),\n\n // Add one of the following depending on your bundler...\n\n // Webpack:\n webpackContext: isDev && import.meta.webpackContext('.', {\n   recursive: true,\n   regExp: /\\.safetest$/,\n   mode: 'lazy'\n })\n\n // Vite:\n // importGlob: isDev && import.meta.glob('./**/*.safetest.{j,t}s{,x}'),\n\n // Using the `npx safetest generateimportmap src/Bootstrap.tsx src > src/imports.tsx` syntax:\n // imports, // Where imports is defined as `import imports from './imports';`\n\n // Other:\n // import: isDev && async (s) => import(`${s.replace(/.*src/, '.').replace(/\\.safetest$/, '')}.safetest`),\n\n});"],"mappings":";AAAC,OAAOA,QAAQ,MAAM,WAAW;AACjC,SAASC,SAAS,QAAQ,gBAAgB;AACzC,OAAOC,GAAG,MAAM,WAAW;AAC5B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1BL,QAAQ,CAACM,MAAM,eACbD,OAAA,CAACH,GAAG;EAAAK,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EACPC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAC/B,CAAC;AACD,MAAMC,SAAS,GAAGF,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;AAChD,MAAME,OAAO,gBAAGT,OAAA,CAACH,GAAG;EAAAK,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC;AAEvB,MAAMK,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;AAEnDjB,SAAS,CAAC;EACTa,OAAO;EACPR,MAAM,EAAGQ,OAAO,IAAKd,QAAQ,CAACM,MAAM,CAACQ,OAAO,EAAED,SAAS,CAAC;EACxD;EACA;;EAEA;;EAEA;EACAM,cAAc,EAAEJ,KAAK,IAAIK,MAAM,CAACC,IAAI,CAACF,cAAc,CAAC,GAAG,EAAE;IACvDG,SAAS,EAAE,IAAI;IACfC,MAAM,EAAE,aAAa;IACrBC,IAAI,EAAE;EACR,CAAC;;EAED;EACA;;EAEA;EACA;;EAEA;EACA;AAED,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}