{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createOverride = exports.configureCreateOverride = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar configureCreateOverride = function (warnOnUnmountedCurrent) {\n  if (warnOnUnmountedCurrent === void 0) {\n    warnOnUnmountedCurrent = true;\n  }\n  return function (defaultValue) {\n    var bounds = [];\n    var Context = react_1.default.createContext({\n      value: defaultValue,\n      version: 0\n    });\n    var useValue = function () {\n      var context = __assign({}, react_1.default.useContext(Context));\n      if (context.version === 0) {\n        for (var _i = 0, bounds_1 = bounds; _i < bounds_1.length; _i++) {\n          var bound = bounds_1[_i];\n          context.value = bound(context.value);\n          context.version++;\n        }\n      }\n      return context;\n    };\n    var Override = {\n      useValue: function () {\n        return useValue().value;\n      },\n      Override: function (props) {\n        var old = useValue();\n        var value = old.value;\n        var newValue = {\n          value: props.with(value),\n          version: old.version + 1\n        };\n        return react_1.default.createElement(Context.Provider, {\n          value: newValue\n        }, props.children);\n      },\n      bind: function (callback) {\n        return bounds.push(callback);\n      },\n      createRef: function (withValue) {\n        var unmounted = true;\n        var ref = undefined;\n        var incrementVersion;\n        var resolver;\n        var initialRenderDeferred = {};\n        initialRenderDeferred.promise = new Promise(function (resolve, reject) {\n          initialRenderDeferred.resolve = resolve;\n          initialRenderDeferred.reject = reject;\n        });\n        var Provider = function (props) {\n          react_1.default.useEffect(function () {\n            resolver === null || resolver === void 0 ? void 0 : resolver();\n            resolver = undefined;\n            initialRenderDeferred === null || initialRenderDeferred === void 0 ? void 0 : initialRenderDeferred.resolve();\n            initialRenderDeferred = undefined;\n          });\n          react_1.default.useEffect(function () {\n            incrementVersion = function () {\n              return setVersion(function (t) {\n                return t + 1;\n              });\n            };\n            unmounted = false;\n            return function () {\n              return void (unmounted = true);\n            };\n          }, []);\n          var oldValue = react_1.default.useContext(Context);\n          if (!ref) {\n            ref = {\n              current: withValue ? withValue(oldValue.value) : oldValue.value\n            };\n          }\n          var _a = react_1.default.useState(oldValue.version + 1),\n            version = _a[0],\n            setVersion = _a[1];\n          var newValue = {\n            value: ref.current,\n            version: version + 1\n          };\n          return react_1.default.createElement(Context.Provider, {\n            value: newValue\n          }, props.children);\n        };\n        Provider.waitForRender = function (timeout) {\n          return __awaiter(void 0, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              if (!(initialRenderDeferred === null || initialRenderDeferred === void 0 ? void 0 : initialRenderDeferred.promise)) return [2 /*return*/];\n              if (!timeout) return [2 /*return*/, initialRenderDeferred.promise];\n              return [2 /*return*/, Promise.race([initialRenderDeferred.promise, new Promise(function (_, reject) {\n                return setTimeout(function () {\n                  return reject(new Error('waitForRender timed out'));\n                }, timeout);\n              })])];\n            });\n          });\n        };\n        Object.defineProperty(Provider, 'current', {\n          get: function () {\n            if (unmounted && warnOnUnmountedCurrent) {\n              console.error('Attempted to get current value when Element is not rendered. Do you forget to `waitForRender()`?');\n            }\n            return ref === null || ref === void 0 ? void 0 : ref.current;\n          }\n        });\n        Provider.forceUpdate = function () {\n          if (unmounted) {\n            throw new Error('Attempted to force update when Element is not rendered');\n          }\n          return new Promise(function (resolve) {\n            resolver = resolve;\n            incrementVersion();\n          });\n        };\n        return Provider;\n      }\n    };\n    return Override;\n  };\n};\nexports.configureCreateOverride = configureCreateOverride;\nexports.createOverride = (0, exports.configureCreateOverride)();","map":{"version":3,"names":["react_1","__importDefault","require","configureCreateOverride","warnOnUnmountedCurrent","defaultValue","bounds","Context","default","createContext","value","version","useValue","context","__assign","useContext","_i","bounds_1","length","bound","Override","props","old","newValue","with","createElement","Provider","children","bind","callback","push","createRef","withValue","unmounted","ref","undefined","incrementVersion","resolver","initialRenderDeferred","promise","Promise","resolve","reject","useEffect","setVersion","t","oldValue","current","_a","useState","waitForRender","timeout","__awaiter","race","_","setTimeout","Error","Object","defineProperty","get","console","error","forceUpdate","exports","createOverride"],"sources":["/Users/nour/Documents/GitHub/safeTestProject-v1/node_modules/react-override/src/index.tsx"],"sourcesContent":["import React from 'react';\n\ntype PropsWithChildren<P = unknown> = P & { children?: React.ReactNode };\n\nexport interface Override<T> {\n  /** Hook to get the current value of the overridable value. */\n  useValue: () => T;\n  /**\n   * Component used to override the value.\n   *  This is like Context.Provider with the exception that the\n   * `with` prop gets passed the existing value so you can delegate to\n   * the existing value as needed.\n   */\n  Override: React.FC<PropsWithChildren<{ with: (old: T) => T }>>;\n  /** Bind override value late. Use this when you need to declare your overrides in a separate file due to import limitations. */\n  bind: (callback: (value: T) => T) => void;\n  /**\n   * Create an extractor component.\n   * This allows you to \"pull out\" the override value to manipulate during a test.\n   * For example:\n   *\n   *     const ApiRef = ApiOverride.createRef();\n   *     const { rendered } = render(<ApiRef><Thing /></ApiRef>);\n   *\n   *     rendered.getByText('load more').click();\n   *     expect(rendered).toHaveMoreElements();\n   *     const loadMore = ApiRef.current.loadMore;\n   *     ApiRef.current.loadMore = () => { throw new Error('no network'); };\n   *     rendered.getByText('load more').click();\n   *     expect(theError).toHaveHappened(); // Not real code, but you get the idea.\n   *     ApiRef.current.loadMore = loadMore;\n   *     rendered.getByText('load more').click();\n   *     expect(rendered).toHaveMoreElements();\n   */\n  createRef: (withValue?: (t: T) => T) => React.FC<PropsWithChildren> & {\n    /** Gets the currently mounted value of the override. */\n    current: T;\n    /** Waits for the element to render, will timeout with a rejection after `timeoutMs` if provided. */\n    waitForRender: (timeoutMs?: number) => Promise<void>;\n    /** Forces the component to update. Useful when you changed the return value of a function or spy */\n    forceUpdate: () => Promise<void>;\n  };\n}\n\nexport const configureCreateOverride =\n  (warnOnUnmountedCurrent = true) =>\n  <T,>(defaultValue: T): Override<T> => {\n    const bounds: Array<(value: T) => T> = [];\n    const Context = React.createContext({\n      value: defaultValue,\n      version: 0,\n    });\n    const useValue = () => {\n      const context = { ...React.useContext(Context) };\n\n      if (context.version === 0) {\n        for (const bound of bounds) {\n          context.value = bound(context.value);\n          context.version++;\n        }\n      }\n      return context;\n    };\n    const Override: Override<T> = {\n      useValue: () => useValue().value,\n      Override: (props) => {\n        const old = useValue();\n        let value = old.value;\n        const newValue = {\n          value: props.with(value),\n          version: old.version + 1,\n        };\n        return (\n          <Context.Provider value={newValue}>{props.children}</Context.Provider>\n        );\n      },\n      bind: (callback) => bounds.push(callback),\n      createRef: (withValue) => {\n        let unmounted = true;\n        let ref: { current: T } | undefined = undefined;\n        let incrementVersion: () => void;\n        let resolver: undefined | (() => void);\n        let initialRenderDeferred: any = {};\n        initialRenderDeferred.promise = new Promise((resolve, reject) => {\n          initialRenderDeferred.resolve = resolve;\n          initialRenderDeferred.reject = reject;\n        });\n\n        const Provider: ReturnType<Override<T>['createRef']> = ((\n          props: any\n        ) => {\n          React.useEffect(() => {\n            resolver?.();\n            resolver = undefined;\n            initialRenderDeferred?.resolve();\n            initialRenderDeferred = undefined;\n          });\n          React.useEffect(() => {\n            incrementVersion = () => setVersion((t) => t + 1);\n            unmounted = false;\n            return () => void (unmounted = true);\n          }, []);\n\n          const oldValue = React.useContext(Context);\n          if (!ref) {\n            ref = {\n              current: withValue ? withValue(oldValue.value) : oldValue.value,\n            };\n          }\n          const [version, setVersion] = React.useState(oldValue.version + 1);\n          const newValue = {\n            value: ref.current,\n            version: version + 1,\n          };\n\n          return (\n            <Context.Provider value={newValue}>\n              {props.children}\n            </Context.Provider>\n          );\n        }) as any;\n\n        Provider.waitForRender = async (timeout?: number) => {\n          if (!initialRenderDeferred?.promise) return;\n          if (!timeout) return initialRenderDeferred.promise;\n          return Promise.race([\n            initialRenderDeferred.promise,\n            new Promise((_, reject) =>\n              setTimeout(\n                () => reject(new Error('waitForRender timed out')),\n                timeout\n              )\n            ),\n          ]);\n        };\n\n        Object.defineProperty(Provider, 'current', {\n          get: () => {\n            if (unmounted && warnOnUnmountedCurrent) {\n              console.error(\n                'Attempted to get current value when Element is not rendered. Do you forget to `waitForRender()`?'\n              );\n            }\n            return ref?.current!;\n          },\n        });\n\n        Provider.forceUpdate = () => {\n          if (unmounted) {\n            throw new Error(\n              'Attempted to force update when Element is not rendered'\n            );\n          }\n          return new Promise<void>((resolve) => {\n            resolver = resolve;\n            incrementVersion();\n          });\n        };\n\n        return Provider;\n      },\n    };\n    return Override;\n  };\n\nexport const createOverride = configureCreateOverride();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}